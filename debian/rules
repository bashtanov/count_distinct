#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
#export DH_VERBOSE = 1


# see FEATURE AREAS in dpkg-buildflags(1)
#export DEB_BUILD_MAINT_OPTIONS = hardening=+all

# see ENVIRONMENT in dpkg-buildflags(1)
# package maintainers to append CFLAGS
#export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
# package maintainers to append LDFLAGS
#export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed

include /usr/share/postgresql-common/pgxs_debian_control.mk

override_dh_auto_build:

override_dh_auto_install:
	+pg_buildext loop postgresql-count-distinct-%v
	# Install an alternative for /usr/bin/pg_repack. We could wrap this
	# using pg_wrapper, but it doesn't matter which binary gets used (it
	# figures out the server version by itself), so we just use the one for
	# the newest server version.
	#set -ex; \
	#for v in $(shell pg_buildext supported-versions); do \
	#	i=$$(echo $$v | tr -d .); \
	#	echo "update-alternatives --install /usr/bin/pg_repack pg_repack /usr/lib/postgresql/$$v/bin/pg_repack $$i" >> debian/postgresql-$$v-repack.postinst.debhelper; \
	#	echo "update-alternatives --remove pg_repack /usr/lib/postgresql/$$v/bin/pg_repack" >> debian/postgresql-$$v-repack.prerm.debhelper; \
	#done

override_dh_installdocs:
	dh_installdocs --all benchmark README.md

%:
	dh $@


# dh_make generated override targets
# This is example for Cmake (See https://bugs.debian.org/641051 )
#override_dh_auto_configure:
#	dh_auto_configure -- #	-DCMAKE_LIBRARY_PATH=$(DEB_HOST_MULTIARCH)

